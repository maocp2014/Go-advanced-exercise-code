陷阱和警告
尽管 Context 的取消功能是一个很好用的工具，但是使用时有一些需要主要的点。最重要的是，context 只能被取消一次。
如果你希望在同一操作中传递多个错误，那么使用 context 取消可能不是最佳选择。
使用取消最常见的场景是仅仅希望取消操作，而不是返回下游操作出现的错误。

需要注意的另一点就是，应将相同的 context  对象传递给可能要取消的所有函数或者协程，
使用 WithTimeout 或 WithCancel 包装一个已经可取消的 context 将导致多种可能的上下文被取消，应该避免。